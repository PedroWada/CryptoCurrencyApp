{"ast":null,"code":"import{useState,useEffect}from'react';import Table from'./Components/Table';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Home(){//https://api.coincap.io/v2/assets/bitcoin\n//https://api.coincap.io/v2/assets\n//https://assets.coincap.io/assets/icons/BTC@2x.png\nconst url='https://api.coincap.io/v2/assets';const[listCryptos,setListCryptos]=useState([]);const[realList,setRealList]=useState([]);useEffect(()=>{axios.get(url).then(resp=>{setListCryptos(resp.data.data);setRealList(resp.data.data);});},[listCryptos]);function search(e){setListCryptos(realList.filter(el=>el.id.includes(e.target.value.toLowerCase())));}return/*#__PURE__*/_jsxs(\"div\",{className:\"page\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"top\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter CryptoCoin...\",onChange:e=>search(e)})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bottom\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Top 100 Cryptos\"}),/*#__PURE__*/_jsx(\"div\",{className:\"list\",children:/*#__PURE__*/_jsx(Table,{list:listCryptos})})]})]});}","map":{"version":3,"names":["useState","useEffect","Table","axios","jsx","_jsx","jsxs","_jsxs","Home","url","listCryptos","setListCryptos","realList","setRealList","get","then","resp","data","search","e","filter","el","id","includes","target","value","toLowerCase","className","children","type","placeholder","onChange","list"],"sources":["/Users/admin/Documents/Coding/Projects/CryptoCurrencyApp/src/Home.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport Table from './Components/Table';\nimport axios from 'axios';\n\n\nexport default function Home(){\n\n//https://api.coincap.io/v2/assets/bitcoin\n//https://api.coincap.io/v2/assets\n//https://assets.coincap.io/assets/icons/BTC@2x.png\n\n    const url = 'https://api.coincap.io/v2/assets'\n    const [listCryptos, setListCryptos] = useState([])\n    const [realList, setRealList] = useState([])\n\n      useEffect(()=>{\n        axios.get(url).then((resp)=>{\n          setListCryptos(resp.data.data)\n          setRealList(resp.data.data)\n        })\n      }, [listCryptos])\n    \n    function search(e){\n      setListCryptos(realList.filter((el)=> \n        el.id.includes(e.target.value.toLowerCase())\n      )) \n    }\n      \n    return(\n        <div className='page'>\n          <div className='top'>\n              <input type='text' placeholder='Enter CryptoCoin...' onChange={(e) => search(e)}/>\n          </div>\n          \n          <div className='bottom'>\n            <h1>Top 100 Cryptos</h1>\n              <div className='list'>\n                <Table list={listCryptos}/>\n              </div>\n          </div>\n        </div>\n    \n    )\n}"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAG1B,cAAe,SAAS,CAAAC,IAAIA,CAAA,CAAE,CAE9B;AACA;AACA;AAEI,KAAM,CAAAC,GAAG,CAAG,kCAAkC,CAC9C,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACY,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAE1CC,SAAS,CAAC,IAAI,CACZE,KAAK,CAACW,GAAG,CAACL,GAAG,CAAC,CAACM,IAAI,CAAEC,IAAI,EAAG,CAC1BL,cAAc,CAACK,IAAI,CAACC,IAAI,CAACA,IAAI,CAAC,CAC9BJ,WAAW,CAACG,IAAI,CAACC,IAAI,CAACA,IAAI,CAAC,CAC7B,CAAC,CAAC,CACJ,CAAC,CAAE,CAACP,WAAW,CAAC,CAAC,CAEnB,QAAS,CAAAQ,MAAMA,CAACC,CAAC,CAAC,CAChBR,cAAc,CAACC,QAAQ,CAACQ,MAAM,CAAEC,EAAE,EAChCA,EAAE,CAACC,EAAE,CAACC,QAAQ,CAACJ,CAAC,CAACK,MAAM,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAC7C,CAAC,CAAC,CACJ,CAEA,mBACInB,KAAA,QAAKoB,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBvB,IAAA,QAAKsB,SAAS,CAAC,KAAK,CAAAC,QAAA,cAChBvB,IAAA,UAAOwB,IAAI,CAAC,MAAM,CAACC,WAAW,CAAC,qBAAqB,CAACC,QAAQ,CAAGZ,CAAC,EAAKD,MAAM,CAACC,CAAC,CAAE,CAAC,CAAC,CACjF,CAAC,cAENZ,KAAA,QAAKoB,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACrBvB,IAAA,OAAAuB,QAAA,CAAI,iBAAe,CAAI,CAAC,cACtBvB,IAAA,QAAKsB,SAAS,CAAC,MAAM,CAAAC,QAAA,cACnBvB,IAAA,CAACH,KAAK,EAAC8B,IAAI,CAAEtB,WAAY,CAAC,CAAC,CACxB,CAAC,EACL,CAAC,EACH,CAAC,CAGd"},"metadata":{},"sourceType":"module","externalDependencies":[]}